[Setup]
AppName=AudioGridder Plugin
AppVersion=#STR_VER#
DefaultDirName={commonpf64}
DefaultGroupName=AudioGridder
OutputBaseFilename=AudioGridderPlugin_#STR_VER#

[Files]
Source: "..\build-win-10-x86_64\Plugin\AudioGridderFx_artefacts\RelWithDebInfo\VST3\AudioGridder.vst3\Contents\x86_64-win\AudioGridder.vst3"; DestDir: {code:GetVST3Dir}; Flags: ignoreversion
Source: "..\build-win-10-x86_64\Plugin\AudioGridderInst_artefacts\RelWithDebInfo\VST3\AudioGridderInst.vst3\Contents\x86_64-win\AudioGridderInst.vst3"; DestDir: {code:GetVST3Dir}; Flags: ignoreversion
Source: "..\build-win-10-x86_64\Plugin\AudioGridderMidi_artefacts\RelWithDebInfo\VST3\AudioGridderMidi.vst3\Contents\x86_64-win\AudioGridderMidi.vst3"; DestDir: {code:GetVST3Dir}; Flags: ignoreversion
Source: "..\build-win-10-x86_64\Plugin\AudioGridderFx_artefacts\RelWithDebInfo\VST\AudioGridder.dll"; DestDir: {code:GetVST2Dir}; Flags: ignoreversion
Source: "..\build-win-10-x86_64\Plugin\AudioGridderInst_artefacts\RelWithDebInfo\VST\AudioGridderInst.dll"; DestDir: {code:GetVST2Dir}; Flags: ignoreversion
Source: "..\build-win-10-x86_64\Plugin\AudioGridderMidi_artefacts\RelWithDebInfo\VST\AudioGridderMidi.dll"; DestDir: {code:GetVST2Dir}; Flags: ignoreversion

[Code]
var
  VST2DirPage: TInputDirWizardPage;
  VST3DirPage: TInputDirWizardPage;

procedure InitializeWizard;
begin
  VST2DirPage := CreateInputDirPage(wpSelectDir,
    'Select Destination Location', 'Where should the AudioGridder VST2 plugin be installed?',
    'To continue, click Next. If you would like to select a different folder, click Browse.',
    False, '');
  VST2DirPage.Add('');
  VST2DirPage.Values[0] := GetPreviousData('VST2Dir', '');

  VST3DirPage := CreateInputDirPage(wpSelectDir,
    'Select Destination Location', 'Where should the AudioGridder VST3 plugin be installed?',
    'To continue, click Next. If you would like to select a different folder, click Browse.',
    False, '');
  VST3DirPage.Add('');
  VST3DirPage.Values[0] := GetPreviousData('VST3Dir', '');
end;

procedure RegisterPreviousVST2(PreviousKey: Integer);
begin
  SetPreviousData(PreviousKey, 'VST2Dir', VST2DirPage.Values[0]);
end;

procedure RegisterPreviousVST3(PreviousKey: Integer);
begin
  SetPreviousData(PreviousKey, 'VST3Dir', VST3DirPage.Values[0]);
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if VST2DirPage.Values[0] = '' then
     VST2DirPage.Values[0] := ExpandConstant('{commonpf64}\VstPlugins');
  if VST3DirPage.Values[0] = '' then
     VST3DirPage.Values[0] := ExpandConstant('{commoncf64}\VST3');
  Result := True;
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  if (PageId = wpSelectDir) then begin
     Result := True;
     exit;
  end;
  Result := False;
end;

function UpdateReadyMemo(Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo,
  MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo: String): String;
var
  S: String;
begin
  S := '';
  S := S + 'VST3 plugin location:' + NewLine;
  S := S + Space + VST3DirPage.Values[0] + NewLine + NewLine;
  S := S + 'VST2 plugin location:' + NewLine;
  S := S + Space + VST2DirPage.Values[0] + NewLine + NewLine;
  Result := S;
end;

function GetVST2Dir(Param: String): String;
begin
  { Return the selected VST2Dir }
  Result := VST2DirPage.Values[0];
end;

function GetVST3Dir(Param: String): String;
begin
  { Return the selected VST3Dir }
  Result := VST3DirPage.Values[0];
end;
